repositories {
    mavenLocal()
    mavenCentral()
}

apply plugin: 'java-library'
apply plugin: 'signing'
apply plugin: 'jacoco'
apply plugin: 'maven-publish'

group 'com.factset.sdk'
version '1.1.1'

dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'com.nimbusds:nimbus-jose-jwt:9.40'
    implementation 'org.json:json:20240303'
    implementation 'com.nimbusds:oauth2-oidc-sdk:11.19.1'

    testImplementation 'org.mockito:mockito-core:5.14.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testImplementation 'ch.qos.logback:logback-classic:1.2.11'
    testImplementation "com.github.tomakehurst:wiremock-jre8-standalone:2.35.0"
    testImplementation "org.assertj:assertj-core:3.26.0"
    testImplementation "org.hamcrest:hamcrest:2.2"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    testRuntimeOnly 'ch.qos.logback:logback-core:1.2.11'

    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}


test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.required = true
        xml.outputLocation = layout.buildDirectory.file("reports/jacoco.xml")

        html.required = true
        html.outputLocation = layout.buildDirectory.dir("reports/jacoco")
    }
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'FactSet SDK Utilities for Java'
                description = 'FactSet SDK Utilities for Java'
                url = 'https://github.com/factset/enterprise-sdk-utils-java'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'enterprisesdk'
                        organization = 'FactSet'
                        organizationUrl = 'https://developer.factset.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/factset/enterprise-sdk-utils-java.git'
                    developerConnection = 'scm:git:ssh://factset/enterprise-sdk-utils-java.git'
                    url = 'https://github.com/factset/enterprise-sdk-utils-java/'
                }
            }
        }
    }

    repositories {
        maven {
            url = version.endsWith('SNAPSHOT') ? System.getenv('MAVEN_SNAPSHOTS_URL') : System.getenv('MAVEN_RELEASES_URL')

            credentials {
                username = System.getenv('MAVEN_USERNAME')
                password = System.getenv('MAVEN_PASSWORD')
            }

            authentication {
                digest(BasicAuthentication)
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
